<?php
// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `MObject.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once 'common.php';

if(!class_exists('Space_MOID'))
{
    class Space_MOID
    {
        public function __construct($xid=0, $id=0)
        {
            $this->xid = $xid;
            $this->id = $id;
        }

        public function __toString()
        {
            global $Space__t_MOID;
            return IcePHP_stringify($this, $Space__t_MOID);
        }

        public $xid;
        public $id;
    }

    $Space__t_MOID = IcePHP_defineStruct('::Space::MOID', 'Space_MOID', array(
        array('xid', $IcePHP__t_long), 
        array('id', $IcePHP__t_long)));
}

if(!isset($Space__t_MOIDSeq))
{
    $Space__t_MOIDSeq = IcePHP_defineSequence('::Space::MOIDSeq', $Space__t_MOID);
}

if(!class_exists('Space_MObjectDetail'))
{
    class Space_MObjectDetail
    {
        public function __construct($fields=null, $rows=null)
        {
            $this->fields = $fields;
            $this->rows = $rows;
        }

        public function __toString()
        {
            global $Space__t_MObjectDetail;
            return IcePHP_stringify($this, $Space__t_MObjectDetail);
        }

        public $fields;
        public $rows;
    }

    $Space__t_MObjectDetail = IcePHP_defineStruct('::Space::MObjectDetail', 'Space_MObjectDetail', array(
        array('fields', $Space__t_StringSeq), 
        array('rows', $Space__t_StringSeqSeq)));
}

if(!class_exists('Space_MObjectType'))
{
    class Space_MObjectType
    {
        public function __construct($type='', $xidname='', $idname='', $fields=null)
        {
            $this->type = $type;
            $this->xidname = $xidname;
            $this->idname = $idname;
            $this->fields = $fields;
        }

        public function __toString()
        {
            global $Space__t_MObjectType;
            return IcePHP_stringify($this, $Space__t_MObjectType);
        }

        public $type;
        public $xidname;
        public $idname;
        public $fields;
    }

    $Space__t_MObjectType = IcePHP_defineStruct('::Space::MObjectType', 'Space_MObjectType', array(
        array('type', $IcePHP__t_string), 
        array('xidname', $IcePHP__t_string), 
        array('idname', $IcePHP__t_string), 
        array('fields', $Space__t_StringSeq)));
}

if(!isset($Space__t_MObjectTypeSeq))
{
    $Space__t_MObjectTypeSeq = IcePHP_defineSequence('::Space::MObjectTypeSeq', $Space__t_MObjectType);
}

if(!isset($Space__t_MObjectBuffer))
{
    $Space__t_MObjectBuffer = IcePHP_declareClass('::Space::MObjectBuffer');
    $Space__t_MObjectBufferPrx = IcePHP_declareProxy('::Space::MObjectBuffer');
}

if(!isset($Space__t_MObjectBufferPrxSeq))
{
    $Space__t_MObjectBufferPrxSeq = IcePHP_defineSequence('::Space::MObjectBufferPrxSeq', $Space__t_MObjectBufferPrx);
}

if(!interface_exists('Space_MObjectBuffer'))
{
    interface Space_MObjectBuffer
    {
        public function getMObjectDetailLong($type, $oids);
        public function getMObjectDetailByFieldsLong($type, $fields, $oids);
        public function getTypes();
    }

    class Space_MObjectBufferPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::Space::MObjectBuffer', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Space::MObjectBuffer', $facet);
        }
    }

    $Space__t_MObjectBuffer = IcePHP_defineClass('::Space::MObjectBuffer', 'Space_MObjectBuffer', -1, true, false, $Ice__t_Object, null, null);

    $Space__t_MObjectBufferPrx = IcePHP_defineProxy($Space__t_MObjectBuffer);

    IcePHP_defineOperation($Space__t_MObjectBuffer, 'getMObjectDetailLong', 0, 0, 0, array(array($IcePHP__t_string, false, 0), array($Space__t_MOIDSeq, false, 0)), null, array($Space__t_MObjectDetail, false, 0), array($Space__t_RuntimeError));
    IcePHP_defineOperation($Space__t_MObjectBuffer, 'getMObjectDetailByFieldsLong', 0, 0, 0, array(array($IcePHP__t_string, false, 0), array($Space__t_StringSeq, false, 0), array($Space__t_MOIDSeq, false, 0)), null, array($Space__t_MObjectDetail, false, 0), array($Space__t_RuntimeError));
    IcePHP_defineOperation($Space__t_MObjectBuffer, 'getTypes', 0, 0, 0, null, null, array($Space__t_MObjectTypeSeq, false, 0), array($Space__t_RuntimeError));
}
?>
