<?php
// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `DBProxyCtrl.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


if(!interface_exists('Space_DBProxyCtrl'))
{
    interface Space_DBProxyCtrl
    {
        public function reloadDBSetting();
        public function getStat();
        public function setActive($sid, $active);
    }

    class Space_DBProxyCtrlPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::Space::DBProxyCtrl', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Space::DBProxyCtrl', $facet);
        }
    }

    $Space__t_DBProxyCtrl = IcePHP_defineClass('::Space::DBProxyCtrl', 'Space_DBProxyCtrl', -1, true, false, $Ice__t_Object, null, null);

    $Space__t_DBProxyCtrlPrx = IcePHP_defineProxy($Space__t_DBProxyCtrl);

    IcePHP_defineOperation($Space__t_DBProxyCtrl, 'reloadDBSetting', 0, 0, 0, null, null, array($IcePHP__t_bool, false, 0), null);
    IcePHP_defineOperation($Space__t_DBProxyCtrl, 'getStat', 0, 0, 0, null, null, array($IcePHP__t_string, false, 0), null);
    IcePHP_defineOperation($Space__t_DBProxyCtrl, 'setActive', 0, 0, 0, array(array($IcePHP__t_int, false, 0), array($IcePHP__t_bool, false, 0)), null, array($IcePHP__t_bool, false, 0), null);
}
?>
