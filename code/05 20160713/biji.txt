3000000
500000
5000 
100个

local memcached （1人取到，立马存在本地缓存）
99人，是不是可以直接走缓存
从 50万减少到了5000次。
PHP缓存，多级优化：
A、页面内优化（读取）
头像区
帖子区（读取两次）
全页版块，对用户只取一次
B、页面片断的优化（Quickling+PageCache)
C、本地缓存（本服务缓存）
D、集中缓存池

(httpd)Proxy(Libmemcached)=>Services

key,value,expire
value=>分配？（key)
expire=>不是必选的
key=>分配到哪台机器上去？
分库分表=> 取模分表uid % 10 =>10个库?
高可靠的服务（uid稳定的）

如果用取模的方式的分配缓存，觉得可以吗？
不是一个好的方案？
天然？（分配），对任何的挂掉，没有严重影响
数据丢掉也不是很紧要

经常被丢失。
不稳定的情况？

5 4
1=>2 0=>1
1 2

5 4
2=>3 1=>2
1 2 3
缓存失效=>取不到=>后端去取=>雪崩

缓慢的时候？（看过流量曲线,mrtg 流量曲线)
（导致出口流量上升）。


三个东西：
A、需要存储的对象和KEY
B、缓存算法所用值$i
C、缓存节点





